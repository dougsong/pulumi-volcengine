# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['ClbArgs', 'Clb']

@pulumi.input_type
class ClbArgs:
    def __init__(__self__, *,
                 load_balancer_spec: pulumi.Input[str],
                 region_id: pulumi.Input[str],
                 subnet_id: pulumi.Input[str],
                 type: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 eni_address: Optional[pulumi.Input[str]] = None,
                 load_balancer_billing_type: Optional[pulumi.Input[str]] = None,
                 load_balancer_name: Optional[pulumi.Input[str]] = None,
                 modification_protection_reason: Optional[pulumi.Input[str]] = None,
                 modification_protection_status: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Clb resource.
        :param pulumi.Input[str] load_balancer_spec: The specification of the CLB.
        :param pulumi.Input[str] region_id: The region of the request.
        :param pulumi.Input[str] subnet_id: The id of the Subnet.
        :param pulumi.Input[str] type: The type of the CLB. And optional choice contains `public` or `private`.
        :param pulumi.Input[str] description: The description of the CLB.
        :param pulumi.Input[str] eni_address: The eni address of the CLB.
        :param pulumi.Input[str] load_balancer_billing_type: The billing type of the CLB.
        :param pulumi.Input[str] load_balancer_name: The name of the CLB.
        :param pulumi.Input[str] modification_protection_reason: The reason of the console modification protection.
        :param pulumi.Input[str] modification_protection_status: The status of the console modification protection.
        :param pulumi.Input[str] vpc_id: The id of the VPC.
        """
        pulumi.set(__self__, "load_balancer_spec", load_balancer_spec)
        pulumi.set(__self__, "region_id", region_id)
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "type", type)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if eni_address is not None:
            pulumi.set(__self__, "eni_address", eni_address)
        if load_balancer_billing_type is not None:
            pulumi.set(__self__, "load_balancer_billing_type", load_balancer_billing_type)
        if load_balancer_name is not None:
            pulumi.set(__self__, "load_balancer_name", load_balancer_name)
        if modification_protection_reason is not None:
            pulumi.set(__self__, "modification_protection_reason", modification_protection_reason)
        if modification_protection_status is not None:
            pulumi.set(__self__, "modification_protection_status", modification_protection_status)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="loadBalancerSpec")
    def load_balancer_spec(self) -> pulumi.Input[str]:
        """
        The specification of the CLB.
        """
        return pulumi.get(self, "load_balancer_spec")

    @load_balancer_spec.setter
    def load_balancer_spec(self, value: pulumi.Input[str]):
        pulumi.set(self, "load_balancer_spec", value)

    @property
    @pulumi.getter(name="regionId")
    def region_id(self) -> pulumi.Input[str]:
        """
        The region of the request.
        """
        return pulumi.get(self, "region_id")

    @region_id.setter
    def region_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "region_id", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Input[str]:
        """
        The id of the Subnet.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        The type of the CLB. And optional choice contains `public` or `private`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the CLB.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="eniAddress")
    def eni_address(self) -> Optional[pulumi.Input[str]]:
        """
        The eni address of the CLB.
        """
        return pulumi.get(self, "eni_address")

    @eni_address.setter
    def eni_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "eni_address", value)

    @property
    @pulumi.getter(name="loadBalancerBillingType")
    def load_balancer_billing_type(self) -> Optional[pulumi.Input[str]]:
        """
        The billing type of the CLB.
        """
        return pulumi.get(self, "load_balancer_billing_type")

    @load_balancer_billing_type.setter
    def load_balancer_billing_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "load_balancer_billing_type", value)

    @property
    @pulumi.getter(name="loadBalancerName")
    def load_balancer_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the CLB.
        """
        return pulumi.get(self, "load_balancer_name")

    @load_balancer_name.setter
    def load_balancer_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "load_balancer_name", value)

    @property
    @pulumi.getter(name="modificationProtectionReason")
    def modification_protection_reason(self) -> Optional[pulumi.Input[str]]:
        """
        The reason of the console modification protection.
        """
        return pulumi.get(self, "modification_protection_reason")

    @modification_protection_reason.setter
    def modification_protection_reason(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "modification_protection_reason", value)

    @property
    @pulumi.getter(name="modificationProtectionStatus")
    def modification_protection_status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the console modification protection.
        """
        return pulumi.get(self, "modification_protection_status")

    @modification_protection_status.setter
    def modification_protection_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "modification_protection_status", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of the VPC.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_id", value)


@pulumi.input_type
class _ClbState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 eni_address: Optional[pulumi.Input[str]] = None,
                 load_balancer_billing_type: Optional[pulumi.Input[str]] = None,
                 load_balancer_name: Optional[pulumi.Input[str]] = None,
                 load_balancer_spec: Optional[pulumi.Input[str]] = None,
                 modification_protection_reason: Optional[pulumi.Input[str]] = None,
                 modification_protection_status: Optional[pulumi.Input[str]] = None,
                 region_id: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering Clb resources.
        :param pulumi.Input[str] description: The description of the CLB.
        :param pulumi.Input[str] eni_address: The eni address of the CLB.
        :param pulumi.Input[str] load_balancer_billing_type: The billing type of the CLB.
        :param pulumi.Input[str] load_balancer_name: The name of the CLB.
        :param pulumi.Input[str] load_balancer_spec: The specification of the CLB.
        :param pulumi.Input[str] modification_protection_reason: The reason of the console modification protection.
        :param pulumi.Input[str] modification_protection_status: The status of the console modification protection.
        :param pulumi.Input[str] region_id: The region of the request.
        :param pulumi.Input[str] subnet_id: The id of the Subnet.
        :param pulumi.Input[str] type: The type of the CLB. And optional choice contains `public` or `private`.
        :param pulumi.Input[str] vpc_id: The id of the VPC.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if eni_address is not None:
            pulumi.set(__self__, "eni_address", eni_address)
        if load_balancer_billing_type is not None:
            pulumi.set(__self__, "load_balancer_billing_type", load_balancer_billing_type)
        if load_balancer_name is not None:
            pulumi.set(__self__, "load_balancer_name", load_balancer_name)
        if load_balancer_spec is not None:
            pulumi.set(__self__, "load_balancer_spec", load_balancer_spec)
        if modification_protection_reason is not None:
            pulumi.set(__self__, "modification_protection_reason", modification_protection_reason)
        if modification_protection_status is not None:
            pulumi.set(__self__, "modification_protection_status", modification_protection_status)
        if region_id is not None:
            pulumi.set(__self__, "region_id", region_id)
        if subnet_id is not None:
            pulumi.set(__self__, "subnet_id", subnet_id)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if vpc_id is not None:
            pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the CLB.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="eniAddress")
    def eni_address(self) -> Optional[pulumi.Input[str]]:
        """
        The eni address of the CLB.
        """
        return pulumi.get(self, "eni_address")

    @eni_address.setter
    def eni_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "eni_address", value)

    @property
    @pulumi.getter(name="loadBalancerBillingType")
    def load_balancer_billing_type(self) -> Optional[pulumi.Input[str]]:
        """
        The billing type of the CLB.
        """
        return pulumi.get(self, "load_balancer_billing_type")

    @load_balancer_billing_type.setter
    def load_balancer_billing_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "load_balancer_billing_type", value)

    @property
    @pulumi.getter(name="loadBalancerName")
    def load_balancer_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the CLB.
        """
        return pulumi.get(self, "load_balancer_name")

    @load_balancer_name.setter
    def load_balancer_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "load_balancer_name", value)

    @property
    @pulumi.getter(name="loadBalancerSpec")
    def load_balancer_spec(self) -> Optional[pulumi.Input[str]]:
        """
        The specification of the CLB.
        """
        return pulumi.get(self, "load_balancer_spec")

    @load_balancer_spec.setter
    def load_balancer_spec(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "load_balancer_spec", value)

    @property
    @pulumi.getter(name="modificationProtectionReason")
    def modification_protection_reason(self) -> Optional[pulumi.Input[str]]:
        """
        The reason of the console modification protection.
        """
        return pulumi.get(self, "modification_protection_reason")

    @modification_protection_reason.setter
    def modification_protection_reason(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "modification_protection_reason", value)

    @property
    @pulumi.getter(name="modificationProtectionStatus")
    def modification_protection_status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the console modification protection.
        """
        return pulumi.get(self, "modification_protection_status")

    @modification_protection_status.setter
    def modification_protection_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "modification_protection_status", value)

    @property
    @pulumi.getter(name="regionId")
    def region_id(self) -> Optional[pulumi.Input[str]]:
        """
        The region of the request.
        """
        return pulumi.get(self, "region_id")

    @region_id.setter
    def region_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "region_id", value)

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of the Subnet.
        """
        return pulumi.get(self, "subnet_id")

    @subnet_id.setter
    def subnet_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "subnet_id", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of the CLB. And optional choice contains `public` or `private`.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> Optional[pulumi.Input[str]]:
        """
        The id of the VPC.
        """
        return pulumi.get(self, "vpc_id")

    @vpc_id.setter
    def vpc_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vpc_id", value)


class Clb(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 eni_address: Optional[pulumi.Input[str]] = None,
                 load_balancer_billing_type: Optional[pulumi.Input[str]] = None,
                 load_balancer_name: Optional[pulumi.Input[str]] = None,
                 load_balancer_spec: Optional[pulumi.Input[str]] = None,
                 modification_protection_reason: Optional[pulumi.Input[str]] = None,
                 modification_protection_status: Optional[pulumi.Input[str]] = None,
                 region_id: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a resource to manage clb
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo = volcengine.clb.Clb("foo",
            description="Demo",
            load_balancer_spec="small_1",
            region_id="cn-north-3",
            subnet_id="subnet-2744i7u9alnnk7fap8tkq8aft",
            type="public")
        ```

        ## Import

        CLB can be imported using the id, e.g.

        ```sh
         $ pulumi import volcengine:Clb/clb:Clb default clb-273y2ok6ets007fap8txvf6us
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the CLB.
        :param pulumi.Input[str] eni_address: The eni address of the CLB.
        :param pulumi.Input[str] load_balancer_billing_type: The billing type of the CLB.
        :param pulumi.Input[str] load_balancer_name: The name of the CLB.
        :param pulumi.Input[str] load_balancer_spec: The specification of the CLB.
        :param pulumi.Input[str] modification_protection_reason: The reason of the console modification protection.
        :param pulumi.Input[str] modification_protection_status: The status of the console modification protection.
        :param pulumi.Input[str] region_id: The region of the request.
        :param pulumi.Input[str] subnet_id: The id of the Subnet.
        :param pulumi.Input[str] type: The type of the CLB. And optional choice contains `public` or `private`.
        :param pulumi.Input[str] vpc_id: The id of the VPC.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ClbArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a resource to manage clb
        ## Example Usage

        ```python
        import pulumi
        import pulumi_volcengine as volcengine

        foo = volcengine.clb.Clb("foo",
            description="Demo",
            load_balancer_spec="small_1",
            region_id="cn-north-3",
            subnet_id="subnet-2744i7u9alnnk7fap8tkq8aft",
            type="public")
        ```

        ## Import

        CLB can be imported using the id, e.g.

        ```sh
         $ pulumi import volcengine:Clb/clb:Clb default clb-273y2ok6ets007fap8txvf6us
        ```

        :param str resource_name: The name of the resource.
        :param ClbArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ClbArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 eni_address: Optional[pulumi.Input[str]] = None,
                 load_balancer_billing_type: Optional[pulumi.Input[str]] = None,
                 load_balancer_name: Optional[pulumi.Input[str]] = None,
                 load_balancer_spec: Optional[pulumi.Input[str]] = None,
                 modification_protection_reason: Optional[pulumi.Input[str]] = None,
                 modification_protection_status: Optional[pulumi.Input[str]] = None,
                 region_id: Optional[pulumi.Input[str]] = None,
                 subnet_id: Optional[pulumi.Input[str]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 vpc_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ClbArgs.__new__(ClbArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["eni_address"] = eni_address
            __props__.__dict__["load_balancer_billing_type"] = load_balancer_billing_type
            __props__.__dict__["load_balancer_name"] = load_balancer_name
            if load_balancer_spec is None and not opts.urn:
                raise TypeError("Missing required property 'load_balancer_spec'")
            __props__.__dict__["load_balancer_spec"] = load_balancer_spec
            __props__.__dict__["modification_protection_reason"] = modification_protection_reason
            __props__.__dict__["modification_protection_status"] = modification_protection_status
            if region_id is None and not opts.urn:
                raise TypeError("Missing required property 'region_id'")
            __props__.__dict__["region_id"] = region_id
            if subnet_id is None and not opts.urn:
                raise TypeError("Missing required property 'subnet_id'")
            __props__.__dict__["subnet_id"] = subnet_id
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["vpc_id"] = vpc_id
        super(Clb, __self__).__init__(
            'volcengine:Clb/clb:Clb',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            eni_address: Optional[pulumi.Input[str]] = None,
            load_balancer_billing_type: Optional[pulumi.Input[str]] = None,
            load_balancer_name: Optional[pulumi.Input[str]] = None,
            load_balancer_spec: Optional[pulumi.Input[str]] = None,
            modification_protection_reason: Optional[pulumi.Input[str]] = None,
            modification_protection_status: Optional[pulumi.Input[str]] = None,
            region_id: Optional[pulumi.Input[str]] = None,
            subnet_id: Optional[pulumi.Input[str]] = None,
            type: Optional[pulumi.Input[str]] = None,
            vpc_id: Optional[pulumi.Input[str]] = None) -> 'Clb':
        """
        Get an existing Clb resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the CLB.
        :param pulumi.Input[str] eni_address: The eni address of the CLB.
        :param pulumi.Input[str] load_balancer_billing_type: The billing type of the CLB.
        :param pulumi.Input[str] load_balancer_name: The name of the CLB.
        :param pulumi.Input[str] load_balancer_spec: The specification of the CLB.
        :param pulumi.Input[str] modification_protection_reason: The reason of the console modification protection.
        :param pulumi.Input[str] modification_protection_status: The status of the console modification protection.
        :param pulumi.Input[str] region_id: The region of the request.
        :param pulumi.Input[str] subnet_id: The id of the Subnet.
        :param pulumi.Input[str] type: The type of the CLB. And optional choice contains `public` or `private`.
        :param pulumi.Input[str] vpc_id: The id of the VPC.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ClbState.__new__(_ClbState)

        __props__.__dict__["description"] = description
        __props__.__dict__["eni_address"] = eni_address
        __props__.__dict__["load_balancer_billing_type"] = load_balancer_billing_type
        __props__.__dict__["load_balancer_name"] = load_balancer_name
        __props__.__dict__["load_balancer_spec"] = load_balancer_spec
        __props__.__dict__["modification_protection_reason"] = modification_protection_reason
        __props__.__dict__["modification_protection_status"] = modification_protection_status
        __props__.__dict__["region_id"] = region_id
        __props__.__dict__["subnet_id"] = subnet_id
        __props__.__dict__["type"] = type
        __props__.__dict__["vpc_id"] = vpc_id
        return Clb(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The description of the CLB.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="eniAddress")
    def eni_address(self) -> pulumi.Output[str]:
        """
        The eni address of the CLB.
        """
        return pulumi.get(self, "eni_address")

    @property
    @pulumi.getter(name="loadBalancerBillingType")
    def load_balancer_billing_type(self) -> pulumi.Output[str]:
        """
        The billing type of the CLB.
        """
        return pulumi.get(self, "load_balancer_billing_type")

    @property
    @pulumi.getter(name="loadBalancerName")
    def load_balancer_name(self) -> pulumi.Output[str]:
        """
        The name of the CLB.
        """
        return pulumi.get(self, "load_balancer_name")

    @property
    @pulumi.getter(name="loadBalancerSpec")
    def load_balancer_spec(self) -> pulumi.Output[str]:
        """
        The specification of the CLB.
        """
        return pulumi.get(self, "load_balancer_spec")

    @property
    @pulumi.getter(name="modificationProtectionReason")
    def modification_protection_reason(self) -> pulumi.Output[Optional[str]]:
        """
        The reason of the console modification protection.
        """
        return pulumi.get(self, "modification_protection_reason")

    @property
    @pulumi.getter(name="modificationProtectionStatus")
    def modification_protection_status(self) -> pulumi.Output[Optional[str]]:
        """
        The status of the console modification protection.
        """
        return pulumi.get(self, "modification_protection_status")

    @property
    @pulumi.getter(name="regionId")
    def region_id(self) -> pulumi.Output[str]:
        """
        The region of the request.
        """
        return pulumi.get(self, "region_id")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> pulumi.Output[str]:
        """
        The id of the Subnet.
        """
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        The type of the CLB. And optional choice contains `public` or `private`.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> pulumi.Output[str]:
        """
        The id of the VPC.
        """
        return pulumi.get(self, "vpc_id")

