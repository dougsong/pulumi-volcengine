// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vke

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage vke node pool
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-volcengine/sdk/go/volcengine/Vke"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Vke.NewNodePool(ctx, "vkeTest", &Vke.NodePoolArgs{
// 			ClusterId: pulumi.String("ccah01nnqtofnluts98j0"),
// 			KubernetesConfig: &vke.NodePoolKubernetesConfigArgs{
// 				Labels: vke.NodePoolKubernetesConfigLabelArray{
// 					&vke.NodePoolKubernetesConfigLabelArgs{
// 						Key:   pulumi.String("aa"),
// 						Value: pulumi.String("bb"),
// 					},
// 					&vke.NodePoolKubernetesConfigLabelArgs{
// 						Key:   pulumi.String("cccc"),
// 						Value: pulumi.String("dddd"),
// 					},
// 				},
// 			},
// 			NodeConfig: &vke.NodePoolNodeConfigArgs{
// 				DataVolumes: vke.NodePoolNodeConfigDataVolumeArray{
// 					&vke.NodePoolNodeConfigDataVolumeArgs{
// 						Size: pulumi.Int(60),
// 						Type: pulumi.String("ESSD_PL0"),
// 					},
// 				},
// 				InstanceTypeIds: pulumi.StringArray{
// 					pulumi.String("ecs.r1.large"),
// 				},
// 				Security: &vke.NodePoolNodeConfigSecurityArgs{
// 					Login: &vke.NodePoolNodeConfigSecurityLoginArgs{
// 						Password: pulumi.String("UHdkMTIzNDU2"),
// 					},
// 				},
// 				SubnetIds: pulumi.StringArray{
// 					pulumi.String("subnet-3recgzi7hfim85zsk2i8l9ve7"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// NodePool can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import volcengine:Vke/nodePool:NodePool default pcabe57vqtofgrbln3dp0
// ```
type NodePool struct {
	pulumi.CustomResourceState

	// The node pool elastic scaling configuration information.
	AutoScaling NodePoolAutoScalingPtrOutput `pulumi:"autoScaling"`
	// Is enabled of AutoScaling.
	AutoScalingEnabled pulumi.BoolPtrOutput `pulumi:"autoScalingEnabled"`
	// The ClientToken of NodePool.
	ClientToken pulumi.StringPtrOutput `pulumi:"clientToken"`
	// The ClusterId of NodePool.
	ClusterId pulumi.StringPtrOutput `pulumi:"clusterId"`
	// The ClusterIds of NodePool.
	ClusterIds pulumi.StringArrayOutput `pulumi:"clusterIds"`
	// The CreateClientToken of NodePool.
	CreateClientToken pulumi.StringOutput `pulumi:"createClientToken"`
	// The IDs of NodePool.
	Ids pulumi.StringArrayOutput `pulumi:"ids"`
	// The KubernetesConfig of NodeConfig.
	KubernetesConfig NodePoolKubernetesConfigPtrOutput `pulumi:"kubernetesConfig"`
	// The Name of NodePool.
	Name pulumi.StringOutput `pulumi:"name"`
	// The Config of NodePool.
	NodeConfig NodePoolNodeConfigPtrOutput `pulumi:"nodeConfig"`
	// The Status of NodePool.
	Statuses NodePoolStatusArrayOutput `pulumi:"statuses"`
	// The UpdateClientToken of NodePool.
	UpdateClientToken pulumi.StringOutput `pulumi:"updateClientToken"`
}

// NewNodePool registers a new resource with the given unique name, arguments, and options.
func NewNodePool(ctx *pulumi.Context,
	name string, args *NodePoolArgs, opts ...pulumi.ResourceOption) (*NodePool, error) {
	if args == nil {
		args = &NodePoolArgs{}
	}

	var resource NodePool
	err := ctx.RegisterResource("volcengine:Vke/nodePool:NodePool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNodePool gets an existing NodePool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNodePool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NodePoolState, opts ...pulumi.ResourceOption) (*NodePool, error) {
	var resource NodePool
	err := ctx.ReadResource("volcengine:Vke/nodePool:NodePool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NodePool resources.
type nodePoolState struct {
	// The node pool elastic scaling configuration information.
	AutoScaling *NodePoolAutoScaling `pulumi:"autoScaling"`
	// Is enabled of AutoScaling.
	AutoScalingEnabled *bool `pulumi:"autoScalingEnabled"`
	// The ClientToken of NodePool.
	ClientToken *string `pulumi:"clientToken"`
	// The ClusterId of NodePool.
	ClusterId *string `pulumi:"clusterId"`
	// The ClusterIds of NodePool.
	ClusterIds []string `pulumi:"clusterIds"`
	// The CreateClientToken of NodePool.
	CreateClientToken *string `pulumi:"createClientToken"`
	// The IDs of NodePool.
	Ids []string `pulumi:"ids"`
	// The KubernetesConfig of NodeConfig.
	KubernetesConfig *NodePoolKubernetesConfig `pulumi:"kubernetesConfig"`
	// The Name of NodePool.
	Name *string `pulumi:"name"`
	// The Config of NodePool.
	NodeConfig *NodePoolNodeConfig `pulumi:"nodeConfig"`
	// The Status of NodePool.
	Statuses []NodePoolStatus `pulumi:"statuses"`
	// The UpdateClientToken of NodePool.
	UpdateClientToken *string `pulumi:"updateClientToken"`
}

type NodePoolState struct {
	// The node pool elastic scaling configuration information.
	AutoScaling NodePoolAutoScalingPtrInput
	// Is enabled of AutoScaling.
	AutoScalingEnabled pulumi.BoolPtrInput
	// The ClientToken of NodePool.
	ClientToken pulumi.StringPtrInput
	// The ClusterId of NodePool.
	ClusterId pulumi.StringPtrInput
	// The ClusterIds of NodePool.
	ClusterIds pulumi.StringArrayInput
	// The CreateClientToken of NodePool.
	CreateClientToken pulumi.StringPtrInput
	// The IDs of NodePool.
	Ids pulumi.StringArrayInput
	// The KubernetesConfig of NodeConfig.
	KubernetesConfig NodePoolKubernetesConfigPtrInput
	// The Name of NodePool.
	Name pulumi.StringPtrInput
	// The Config of NodePool.
	NodeConfig NodePoolNodeConfigPtrInput
	// The Status of NodePool.
	Statuses NodePoolStatusArrayInput
	// The UpdateClientToken of NodePool.
	UpdateClientToken pulumi.StringPtrInput
}

func (NodePoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*nodePoolState)(nil)).Elem()
}

type nodePoolArgs struct {
	// The node pool elastic scaling configuration information.
	AutoScaling *NodePoolAutoScaling `pulumi:"autoScaling"`
	// Is enabled of AutoScaling.
	AutoScalingEnabled *bool `pulumi:"autoScalingEnabled"`
	// The ClientToken of NodePool.
	ClientToken *string `pulumi:"clientToken"`
	// The ClusterId of NodePool.
	ClusterId *string `pulumi:"clusterId"`
	// The ClusterIds of NodePool.
	ClusterIds []string `pulumi:"clusterIds"`
	// The IDs of NodePool.
	Ids []string `pulumi:"ids"`
	// The KubernetesConfig of NodeConfig.
	KubernetesConfig *NodePoolKubernetesConfig `pulumi:"kubernetesConfig"`
	// The Name of NodePool.
	Name *string `pulumi:"name"`
	// The Config of NodePool.
	NodeConfig *NodePoolNodeConfig `pulumi:"nodeConfig"`
	// The Status of NodePool.
	Statuses []NodePoolStatus `pulumi:"statuses"`
}

// The set of arguments for constructing a NodePool resource.
type NodePoolArgs struct {
	// The node pool elastic scaling configuration information.
	AutoScaling NodePoolAutoScalingPtrInput
	// Is enabled of AutoScaling.
	AutoScalingEnabled pulumi.BoolPtrInput
	// The ClientToken of NodePool.
	ClientToken pulumi.StringPtrInput
	// The ClusterId of NodePool.
	ClusterId pulumi.StringPtrInput
	// The ClusterIds of NodePool.
	ClusterIds pulumi.StringArrayInput
	// The IDs of NodePool.
	Ids pulumi.StringArrayInput
	// The KubernetesConfig of NodeConfig.
	KubernetesConfig NodePoolKubernetesConfigPtrInput
	// The Name of NodePool.
	Name pulumi.StringPtrInput
	// The Config of NodePool.
	NodeConfig NodePoolNodeConfigPtrInput
	// The Status of NodePool.
	Statuses NodePoolStatusArrayInput
}

func (NodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*nodePoolArgs)(nil)).Elem()
}

type NodePoolInput interface {
	pulumi.Input

	ToNodePoolOutput() NodePoolOutput
	ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput
}

func (*NodePool) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePool)(nil)).Elem()
}

func (i *NodePool) ToNodePoolOutput() NodePoolOutput {
	return i.ToNodePoolOutputWithContext(context.Background())
}

func (i *NodePool) ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolOutput)
}

// NodePoolArrayInput is an input type that accepts NodePoolArray and NodePoolArrayOutput values.
// You can construct a concrete instance of `NodePoolArrayInput` via:
//
//          NodePoolArray{ NodePoolArgs{...} }
type NodePoolArrayInput interface {
	pulumi.Input

	ToNodePoolArrayOutput() NodePoolArrayOutput
	ToNodePoolArrayOutputWithContext(context.Context) NodePoolArrayOutput
}

type NodePoolArray []NodePoolInput

func (NodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodePool)(nil)).Elem()
}

func (i NodePoolArray) ToNodePoolArrayOutput() NodePoolArrayOutput {
	return i.ToNodePoolArrayOutputWithContext(context.Background())
}

func (i NodePoolArray) ToNodePoolArrayOutputWithContext(ctx context.Context) NodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolArrayOutput)
}

// NodePoolMapInput is an input type that accepts NodePoolMap and NodePoolMapOutput values.
// You can construct a concrete instance of `NodePoolMapInput` via:
//
//          NodePoolMap{ "key": NodePoolArgs{...} }
type NodePoolMapInput interface {
	pulumi.Input

	ToNodePoolMapOutput() NodePoolMapOutput
	ToNodePoolMapOutputWithContext(context.Context) NodePoolMapOutput
}

type NodePoolMap map[string]NodePoolInput

func (NodePoolMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodePool)(nil)).Elem()
}

func (i NodePoolMap) ToNodePoolMapOutput() NodePoolMapOutput {
	return i.ToNodePoolMapOutputWithContext(context.Background())
}

func (i NodePoolMap) ToNodePoolMapOutputWithContext(ctx context.Context) NodePoolMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodePoolMapOutput)
}

type NodePoolOutput struct{ *pulumi.OutputState }

func (NodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NodePool)(nil)).Elem()
}

func (o NodePoolOutput) ToNodePoolOutput() NodePoolOutput {
	return o
}

func (o NodePoolOutput) ToNodePoolOutputWithContext(ctx context.Context) NodePoolOutput {
	return o
}

// The node pool elastic scaling configuration information.
func (o NodePoolOutput) AutoScaling() NodePoolAutoScalingPtrOutput {
	return o.ApplyT(func(v *NodePool) NodePoolAutoScalingPtrOutput { return v.AutoScaling }).(NodePoolAutoScalingPtrOutput)
}

// Is enabled of AutoScaling.
func (o NodePoolOutput) AutoScalingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.BoolPtrOutput { return v.AutoScalingEnabled }).(pulumi.BoolPtrOutput)
}

// The ClientToken of NodePool.
func (o NodePoolOutput) ClientToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.ClientToken }).(pulumi.StringPtrOutput)
}

// The ClusterId of NodePool.
func (o NodePoolOutput) ClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringPtrOutput { return v.ClusterId }).(pulumi.StringPtrOutput)
}

// The ClusterIds of NodePool.
func (o NodePoolOutput) ClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringArrayOutput { return v.ClusterIds }).(pulumi.StringArrayOutput)
}

// The CreateClientToken of NodePool.
func (o NodePoolOutput) CreateClientToken() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.CreateClientToken }).(pulumi.StringOutput)
}

// The IDs of NodePool.
func (o NodePoolOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringArrayOutput { return v.Ids }).(pulumi.StringArrayOutput)
}

// The KubernetesConfig of NodeConfig.
func (o NodePoolOutput) KubernetesConfig() NodePoolKubernetesConfigPtrOutput {
	return o.ApplyT(func(v *NodePool) NodePoolKubernetesConfigPtrOutput { return v.KubernetesConfig }).(NodePoolKubernetesConfigPtrOutput)
}

// The Name of NodePool.
func (o NodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The Config of NodePool.
func (o NodePoolOutput) NodeConfig() NodePoolNodeConfigPtrOutput {
	return o.ApplyT(func(v *NodePool) NodePoolNodeConfigPtrOutput { return v.NodeConfig }).(NodePoolNodeConfigPtrOutput)
}

// The Status of NodePool.
func (o NodePoolOutput) Statuses() NodePoolStatusArrayOutput {
	return o.ApplyT(func(v *NodePool) NodePoolStatusArrayOutput { return v.Statuses }).(NodePoolStatusArrayOutput)
}

// The UpdateClientToken of NodePool.
func (o NodePoolOutput) UpdateClientToken() pulumi.StringOutput {
	return o.ApplyT(func(v *NodePool) pulumi.StringOutput { return v.UpdateClientToken }).(pulumi.StringOutput)
}

type NodePoolArrayOutput struct{ *pulumi.OutputState }

func (NodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NodePool)(nil)).Elem()
}

func (o NodePoolArrayOutput) ToNodePoolArrayOutput() NodePoolArrayOutput {
	return o
}

func (o NodePoolArrayOutput) ToNodePoolArrayOutputWithContext(ctx context.Context) NodePoolArrayOutput {
	return o
}

func (o NodePoolArrayOutput) Index(i pulumi.IntInput) NodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NodePool {
		return vs[0].([]*NodePool)[vs[1].(int)]
	}).(NodePoolOutput)
}

type NodePoolMapOutput struct{ *pulumi.OutputState }

func (NodePoolMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NodePool)(nil)).Elem()
}

func (o NodePoolMapOutput) ToNodePoolMapOutput() NodePoolMapOutput {
	return o
}

func (o NodePoolMapOutput) ToNodePoolMapOutputWithContext(ctx context.Context) NodePoolMapOutput {
	return o
}

func (o NodePoolMapOutput) MapIndex(k pulumi.StringInput) NodePoolOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NodePool {
		return vs[0].(map[string]*NodePool)[vs[1].(string)]
	}).(NodePoolOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolInput)(nil)).Elem(), &NodePool{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolArrayInput)(nil)).Elem(), NodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NodePoolMapInput)(nil)).Elem(), NodePoolMap{})
	pulumi.RegisterOutputType(NodePoolOutput{})
	pulumi.RegisterOutputType(NodePoolArrayOutput{})
	pulumi.RegisterOutputType(NodePoolMapOutput{})
}
