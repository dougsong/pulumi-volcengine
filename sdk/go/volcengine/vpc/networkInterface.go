// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpc

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage network interface
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-volcengine/sdk/go/volcengine/Vpc"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := Vpc.NewNetworkInterface(ctx, "foo", &Vpc.NetworkInterfaceArgs{
// 			Description:          pulumi.String("tf-test-up"),
// 			NetworkInterfaceName: pulumi.String("tf-test-up"),
// 			PortSecurityEnabled:  pulumi.Bool(false),
// 			PrimaryIpAddress:     pulumi.String("192.168.0.253"),
// 			SecurityGroupIds: pulumi.StringArray{
// 				pulumi.String("sg-2744hspo7jbpc7fap8t7lef1p"),
// 			},
// 			SubnetId: pulumi.String("subnet-2744ht7fhjthc7fap8tm10eqg"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Network interface can be imported using the id, e.g.
//
// ```sh
//  $ pulumi import volcengine:Vpc/networkInterface:NetworkInterface default eni-bp1fgnh68xyz9****
// ```
type NetworkInterface struct {
	pulumi.CustomResourceState

	// The description of the ENI.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the ENI.
	NetworkInterfaceName pulumi.StringOutput `pulumi:"networkInterfaceName"`
	// Set port security enable or disable.
	PortSecurityEnabled pulumi.BoolOutput `pulumi:"portSecurityEnabled"`
	// The primary IP address of the ENI.
	PrimaryIpAddress pulumi.StringOutput `pulumi:"primaryIpAddress"`
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// The status of the ENI.
	Status pulumi.StringOutput `pulumi:"status"`
	// The id of the subnet to which the ENI is connected.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
}

// NewNetworkInterface registers a new resource with the given unique name, arguments, and options.
func NewNetworkInterface(ctx *pulumi.Context,
	name string, args *NetworkInterfaceArgs, opts ...pulumi.ResourceOption) (*NetworkInterface, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SecurityGroupIds == nil {
		return nil, errors.New("invalid value for required argument 'SecurityGroupIds'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	var resource NetworkInterface
	err := ctx.RegisterResource("volcengine:Vpc/networkInterface:NetworkInterface", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkInterface gets an existing NetworkInterface resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkInterface(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkInterfaceState, opts ...pulumi.ResourceOption) (*NetworkInterface, error) {
	var resource NetworkInterface
	err := ctx.ReadResource("volcengine:Vpc/networkInterface:NetworkInterface", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkInterface resources.
type networkInterfaceState struct {
	// The description of the ENI.
	Description *string `pulumi:"description"`
	// The name of the ENI.
	NetworkInterfaceName *string `pulumi:"networkInterfaceName"`
	// Set port security enable or disable.
	PortSecurityEnabled *bool `pulumi:"portSecurityEnabled"`
	// The primary IP address of the ENI.
	PrimaryIpAddress *string `pulumi:"primaryIpAddress"`
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The status of the ENI.
	Status *string `pulumi:"status"`
	// The id of the subnet to which the ENI is connected.
	SubnetId *string `pulumi:"subnetId"`
}

type NetworkInterfaceState struct {
	// The description of the ENI.
	Description pulumi.StringPtrInput
	// The name of the ENI.
	NetworkInterfaceName pulumi.StringPtrInput
	// Set port security enable or disable.
	PortSecurityEnabled pulumi.BoolPtrInput
	// The primary IP address of the ENI.
	PrimaryIpAddress pulumi.StringPtrInput
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds pulumi.StringArrayInput
	// The status of the ENI.
	Status pulumi.StringPtrInput
	// The id of the subnet to which the ENI is connected.
	SubnetId pulumi.StringPtrInput
}

func (NetworkInterfaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInterfaceState)(nil)).Elem()
}

type networkInterfaceArgs struct {
	// The description of the ENI.
	Description *string `pulumi:"description"`
	// The name of the ENI.
	NetworkInterfaceName *string `pulumi:"networkInterfaceName"`
	// Set port security enable or disable.
	PortSecurityEnabled *bool `pulumi:"portSecurityEnabled"`
	// The primary IP address of the ENI.
	PrimaryIpAddress *string `pulumi:"primaryIpAddress"`
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The id of the subnet to which the ENI is connected.
	SubnetId string `pulumi:"subnetId"`
}

// The set of arguments for constructing a NetworkInterface resource.
type NetworkInterfaceArgs struct {
	// The description of the ENI.
	Description pulumi.StringPtrInput
	// The name of the ENI.
	NetworkInterfaceName pulumi.StringPtrInput
	// Set port security enable or disable.
	PortSecurityEnabled pulumi.BoolPtrInput
	// The primary IP address of the ENI.
	PrimaryIpAddress pulumi.StringPtrInput
	// The list of the security group id to which the secondary ENI belongs.
	SecurityGroupIds pulumi.StringArrayInput
	// The id of the subnet to which the ENI is connected.
	SubnetId pulumi.StringInput
}

func (NetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkInterfaceArgs)(nil)).Elem()
}

type NetworkInterfaceInput interface {
	pulumi.Input

	ToNetworkInterfaceOutput() NetworkInterfaceOutput
	ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput
}

func (*NetworkInterface) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterface)(nil)).Elem()
}

func (i *NetworkInterface) ToNetworkInterfaceOutput() NetworkInterfaceOutput {
	return i.ToNetworkInterfaceOutputWithContext(context.Background())
}

func (i *NetworkInterface) ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceOutput)
}

// NetworkInterfaceArrayInput is an input type that accepts NetworkInterfaceArray and NetworkInterfaceArrayOutput values.
// You can construct a concrete instance of `NetworkInterfaceArrayInput` via:
//
//          NetworkInterfaceArray{ NetworkInterfaceArgs{...} }
type NetworkInterfaceArrayInput interface {
	pulumi.Input

	ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput
	ToNetworkInterfaceArrayOutputWithContext(context.Context) NetworkInterfaceArrayOutput
}

type NetworkInterfaceArray []NetworkInterfaceInput

func (NetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkInterface)(nil)).Elem()
}

func (i NetworkInterfaceArray) ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput {
	return i.ToNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i NetworkInterfaceArray) ToNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceArrayOutput)
}

// NetworkInterfaceMapInput is an input type that accepts NetworkInterfaceMap and NetworkInterfaceMapOutput values.
// You can construct a concrete instance of `NetworkInterfaceMapInput` via:
//
//          NetworkInterfaceMap{ "key": NetworkInterfaceArgs{...} }
type NetworkInterfaceMapInput interface {
	pulumi.Input

	ToNetworkInterfaceMapOutput() NetworkInterfaceMapOutput
	ToNetworkInterfaceMapOutputWithContext(context.Context) NetworkInterfaceMapOutput
}

type NetworkInterfaceMap map[string]NetworkInterfaceInput

func (NetworkInterfaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkInterface)(nil)).Elem()
}

func (i NetworkInterfaceMap) ToNetworkInterfaceMapOutput() NetworkInterfaceMapOutput {
	return i.ToNetworkInterfaceMapOutputWithContext(context.Background())
}

func (i NetworkInterfaceMap) ToNetworkInterfaceMapOutputWithContext(ctx context.Context) NetworkInterfaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkInterfaceMapOutput)
}

type NetworkInterfaceOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceOutput) ToNetworkInterfaceOutput() NetworkInterfaceOutput {
	return o
}

func (o NetworkInterfaceOutput) ToNetworkInterfaceOutputWithContext(ctx context.Context) NetworkInterfaceOutput {
	return o
}

// The description of the ENI.
func (o NetworkInterfaceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the ENI.
func (o NetworkInterfaceOutput) NetworkInterfaceName() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.NetworkInterfaceName }).(pulumi.StringOutput)
}

// Set port security enable or disable.
func (o NetworkInterfaceOutput) PortSecurityEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.BoolOutput { return v.PortSecurityEnabled }).(pulumi.BoolOutput)
}

// The primary IP address of the ENI.
func (o NetworkInterfaceOutput) PrimaryIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.PrimaryIpAddress }).(pulumi.StringOutput)
}

// The list of the security group id to which the secondary ENI belongs.
func (o NetworkInterfaceOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The status of the ENI.
func (o NetworkInterfaceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The id of the subnet to which the ENI is connected.
func (o NetworkInterfaceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkInterface) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

type NetworkInterfaceArrayOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceArrayOutput) ToNetworkInterfaceArrayOutput() NetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfaceArrayOutput) ToNetworkInterfaceArrayOutputWithContext(ctx context.Context) NetworkInterfaceArrayOutput {
	return o
}

func (o NetworkInterfaceArrayOutput) Index(i pulumi.IntInput) NetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkInterface {
		return vs[0].([]*NetworkInterface)[vs[1].(int)]
	}).(NetworkInterfaceOutput)
}

type NetworkInterfaceMapOutput struct{ *pulumi.OutputState }

func (NetworkInterfaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkInterface)(nil)).Elem()
}

func (o NetworkInterfaceMapOutput) ToNetworkInterfaceMapOutput() NetworkInterfaceMapOutput {
	return o
}

func (o NetworkInterfaceMapOutput) ToNetworkInterfaceMapOutputWithContext(ctx context.Context) NetworkInterfaceMapOutput {
	return o
}

func (o NetworkInterfaceMapOutput) MapIndex(k pulumi.StringInput) NetworkInterfaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkInterface {
		return vs[0].(map[string]*NetworkInterface)[vs[1].(string)]
	}).(NetworkInterfaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceInput)(nil)).Elem(), &NetworkInterface{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceArrayInput)(nil)).Elem(), NetworkInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkInterfaceMapInput)(nil)).Elem(), NetworkInterfaceMap{})
	pulumi.RegisterOutputType(NetworkInterfaceOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(NetworkInterfaceMapOutput{})
}
