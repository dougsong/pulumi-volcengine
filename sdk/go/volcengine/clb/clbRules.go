// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to query detailed information of clb rules
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-volcengine/sdk/go/volcengine/Clb"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_default, err := Clb.ClbRules(ctx, &clb.ClbRulesArgs{
// 			ListenerId: "lsn-273ywvnmiu70g7fap8u2xzg9d",
// 			Ids: []string{
// 				"rule-273z9jo9v3mrk7fap8sq8v5x7",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("data", _default)
// 		return nil
// 	})
// }
// ```
func ClbRules(ctx *pulumi.Context, args *ClbRulesArgs, opts ...pulumi.InvokeOption) (*ClbRulesResult, error) {
	var rv ClbRulesResult
	err := ctx.Invoke("volcengine:Clb/clbRules:ClbRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ClbRules.
type ClbRulesArgs struct {
	// A list of Rule IDs.
	Ids []string `pulumi:"ids"`
	// The Id of listener.
	ListenerId string `pulumi:"listenerId"`
	// File name where to save data source results.
	OutputFile *string `pulumi:"outputFile"`
}

// A collection of values returned by ClbRules.
type ClbRulesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string   `pulumi:"id"`
	Ids        []string `pulumi:"ids"`
	ListenerId string   `pulumi:"listenerId"`
	OutputFile *string  `pulumi:"outputFile"`
	// The collection of Rule query.
	Rules []ClbRulesRule `pulumi:"rules"`
}

func ClbRulesOutput(ctx *pulumi.Context, args ClbRulesOutputArgs, opts ...pulumi.InvokeOption) ClbRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ClbRulesResult, error) {
			args := v.(ClbRulesArgs)
			r, err := ClbRules(ctx, &args, opts...)
			var s ClbRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ClbRulesResultOutput)
}

// A collection of arguments for invoking ClbRules.
type ClbRulesOutputArgs struct {
	// A list of Rule IDs.
	Ids pulumi.StringArrayInput `pulumi:"ids"`
	// The Id of listener.
	ListenerId pulumi.StringInput `pulumi:"listenerId"`
	// File name where to save data source results.
	OutputFile pulumi.StringPtrInput `pulumi:"outputFile"`
}

func (ClbRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbRulesArgs)(nil)).Elem()
}

// A collection of values returned by ClbRules.
type ClbRulesResultOutput struct{ *pulumi.OutputState }

func (ClbRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbRulesResult)(nil)).Elem()
}

func (o ClbRulesResultOutput) ToClbRulesResultOutput() ClbRulesResultOutput {
	return o
}

func (o ClbRulesResultOutput) ToClbRulesResultOutputWithContext(ctx context.Context) ClbRulesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o ClbRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ClbRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o ClbRulesResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClbRulesResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o ClbRulesResultOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbRulesResult) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o ClbRulesResultOutput) OutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClbRulesResult) *string { return v.OutputFile }).(pulumi.StringPtrOutput)
}

// The collection of Rule query.
func (o ClbRulesResultOutput) Rules() ClbRulesRuleArrayOutput {
	return o.ApplyT(func(v ClbRulesResult) []ClbRulesRule { return v.Rules }).(ClbRulesRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(ClbRulesResultOutput{})
}
