// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Mongodb
{
    public static class Endpoints
    {
        /// <summary>
        /// Use this data source to query detailed information of mongodb endpoints
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Volcengine.Mongodb.Endpoints.InvokeAsync(new Volcengine.Mongodb.EndpointsArgs
        ///         {
        ///             InstanceId = "mongo-shard-xxx",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<EndpointsResult> InvokeAsync(EndpointsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<EndpointsResult>("volcengine:mongodb/endpoints:Endpoints", args ?? new EndpointsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of mongodb endpoints
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Volcengine.Mongodb.Endpoints.InvokeAsync(new Volcengine.Mongodb.EndpointsArgs
        ///         {
        ///             InstanceId = "mongo-shard-xxx",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<EndpointsResult> Invoke(EndpointsInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<EndpointsResult>("volcengine:mongodb/endpoints:Endpoints", args ?? new EndpointsInvokeArgs(), options.WithDefaults());
    }


    public sealed class EndpointsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The instance ID to query.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        public EndpointsArgs()
        {
        }
    }

    public sealed class EndpointsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The instance ID to query.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        public EndpointsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class EndpointsResult
    {
        /// <summary>
        /// The collection of mongodb endpoints query.
        /// </summary>
        public readonly ImmutableArray<Outputs.EndpointsEndpointResult> Endpoints;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceId;
        public readonly string? OutputFile;
        /// <summary>
        /// The total count of mongodb endpoint query.
        /// </summary>
        public readonly int TotalCount;

        [OutputConstructor]
        private EndpointsResult(
            ImmutableArray<Outputs.EndpointsEndpointResult> endpoints,

            string id,

            string? instanceId,

            string? outputFile,

            int totalCount)
        {
            Endpoints = endpoints;
            Id = id;
            InstanceId = instanceId;
            OutputFile = outputFile;
            TotalCount = totalCount;
        }
    }
}
