// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vke
{
    /// <summary>
    /// Provides a resource to manage vke node pool
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var vkeTest = new Volcengine.Vke.NodePool("vkeTest", new Volcengine.Vke.NodePoolArgs
    ///         {
    ///             ClusterId = "ccah01nnqtofnluts98j0",
    ///             KubernetesConfig = new Volcengine.Vke.Inputs.NodePoolKubernetesConfigArgs
    ///             {
    ///                 Labels = 
    ///                 {
    ///                     new Volcengine.Vke.Inputs.NodePoolKubernetesConfigLabelArgs
    ///                     {
    ///                         Key = "aa",
    ///                         Value = "bb",
    ///                     },
    ///                     new Volcengine.Vke.Inputs.NodePoolKubernetesConfigLabelArgs
    ///                     {
    ///                         Key = "cccc",
    ///                         Value = "dddd",
    ///                     },
    ///                 },
    ///             },
    ///             NodeConfig = new Volcengine.Vke.Inputs.NodePoolNodeConfigArgs
    ///             {
    ///                 DataVolumes = 
    ///                 {
    ///                     new Volcengine.Vke.Inputs.NodePoolNodeConfigDataVolumeArgs
    ///                     {
    ///                         Size = 60,
    ///                         Type = "ESSD_PL0",
    ///                     },
    ///                 },
    ///                 InstanceTypeIds = 
    ///                 {
    ///                     "ecs.r1.large",
    ///                 },
    ///                 Security = new Volcengine.Vke.Inputs.NodePoolNodeConfigSecurityArgs
    ///                 {
    ///                     Login = new Volcengine.Vke.Inputs.NodePoolNodeConfigSecurityLoginArgs
    ///                     {
    ///                         Password = "UHdkMTIzNDU2",
    ///                     },
    ///                 },
    ///                 SubnetIds = 
    ///                 {
    ///                     "subnet-3recgzi7hfim85zsk2i8l9ve7",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// NodePool can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:Vke/nodePool:NodePool default pcabe57vqtofgrbln3dp0
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:Vke/nodePool:NodePool")]
    public partial class NodePool : Pulumi.CustomResource
    {
        /// <summary>
        /// The node pool elastic scaling configuration information.
        /// </summary>
        [Output("autoScaling")]
        public Output<Outputs.NodePoolAutoScaling?> AutoScaling { get; private set; } = null!;

        /// <summary>
        /// Is enabled of AutoScaling.
        /// </summary>
        [Output("autoScalingEnabled")]
        public Output<bool?> AutoScalingEnabled { get; private set; } = null!;

        /// <summary>
        /// The ClientToken of NodePool.
        /// </summary>
        [Output("clientToken")]
        public Output<string?> ClientToken { get; private set; } = null!;

        /// <summary>
        /// The ClusterId of NodePool.
        /// </summary>
        [Output("clusterId")]
        public Output<string?> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The ClusterIds of NodePool.
        /// </summary>
        [Output("clusterIds")]
        public Output<ImmutableArray<string>> ClusterIds { get; private set; } = null!;

        /// <summary>
        /// The CreateClientToken of NodePool.
        /// </summary>
        [Output("createClientToken")]
        public Output<string> CreateClientToken { get; private set; } = null!;

        /// <summary>
        /// The IDs of NodePool.
        /// </summary>
        [Output("ids")]
        public Output<ImmutableArray<string>> Ids { get; private set; } = null!;

        /// <summary>
        /// The KubernetesConfig of NodeConfig.
        /// </summary>
        [Output("kubernetesConfig")]
        public Output<Outputs.NodePoolKubernetesConfig?> KubernetesConfig { get; private set; } = null!;

        /// <summary>
        /// The Name of NodePool.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Config of NodePool.
        /// </summary>
        [Output("nodeConfig")]
        public Output<Outputs.NodePoolNodeConfig?> NodeConfig { get; private set; } = null!;

        /// <summary>
        /// The Status of NodePool.
        /// </summary>
        [Output("statuses")]
        public Output<ImmutableArray<Outputs.NodePoolStatus>> Statuses { get; private set; } = null!;

        /// <summary>
        /// The UpdateClientToken of NodePool.
        /// </summary>
        [Output("updateClientToken")]
        public Output<string> UpdateClientToken { get; private set; } = null!;


        /// <summary>
        /// Create a NodePool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NodePool(string name, NodePoolArgs? args = null, CustomResourceOptions? options = null)
            : base("volcengine:Vke/nodePool:NodePool", name, args ?? new NodePoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NodePool(string name, Input<string> id, NodePoolState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:Vke/nodePool:NodePool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NodePool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NodePool Get(string name, Input<string> id, NodePoolState? state = null, CustomResourceOptions? options = null)
        {
            return new NodePool(name, id, state, options);
        }
    }

    public sealed class NodePoolArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The node pool elastic scaling configuration information.
        /// </summary>
        [Input("autoScaling")]
        public Input<Inputs.NodePoolAutoScalingArgs>? AutoScaling { get; set; }

        /// <summary>
        /// Is enabled of AutoScaling.
        /// </summary>
        [Input("autoScalingEnabled")]
        public Input<bool>? AutoScalingEnabled { get; set; }

        /// <summary>
        /// The ClientToken of NodePool.
        /// </summary>
        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        /// <summary>
        /// The ClusterId of NodePool.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("clusterIds")]
        private InputList<string>? _clusterIds;

        /// <summary>
        /// The ClusterIds of NodePool.
        /// </summary>
        public InputList<string> ClusterIds
        {
            get => _clusterIds ?? (_clusterIds = new InputList<string>());
            set => _clusterIds = value;
        }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The IDs of NodePool.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The KubernetesConfig of NodeConfig.
        /// </summary>
        [Input("kubernetesConfig")]
        public Input<Inputs.NodePoolKubernetesConfigArgs>? KubernetesConfig { get; set; }

        /// <summary>
        /// The Name of NodePool.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Config of NodePool.
        /// </summary>
        [Input("nodeConfig")]
        public Input<Inputs.NodePoolNodeConfigArgs>? NodeConfig { get; set; }

        [Input("statuses")]
        private InputList<Inputs.NodePoolStatusArgs>? _statuses;

        /// <summary>
        /// The Status of NodePool.
        /// </summary>
        public InputList<Inputs.NodePoolStatusArgs> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<Inputs.NodePoolStatusArgs>());
            set => _statuses = value;
        }

        public NodePoolArgs()
        {
        }
    }

    public sealed class NodePoolState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The node pool elastic scaling configuration information.
        /// </summary>
        [Input("autoScaling")]
        public Input<Inputs.NodePoolAutoScalingGetArgs>? AutoScaling { get; set; }

        /// <summary>
        /// Is enabled of AutoScaling.
        /// </summary>
        [Input("autoScalingEnabled")]
        public Input<bool>? AutoScalingEnabled { get; set; }

        /// <summary>
        /// The ClientToken of NodePool.
        /// </summary>
        [Input("clientToken")]
        public Input<string>? ClientToken { get; set; }

        /// <summary>
        /// The ClusterId of NodePool.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("clusterIds")]
        private InputList<string>? _clusterIds;

        /// <summary>
        /// The ClusterIds of NodePool.
        /// </summary>
        public InputList<string> ClusterIds
        {
            get => _clusterIds ?? (_clusterIds = new InputList<string>());
            set => _clusterIds = value;
        }

        /// <summary>
        /// The CreateClientToken of NodePool.
        /// </summary>
        [Input("createClientToken")]
        public Input<string>? CreateClientToken { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The IDs of NodePool.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// The KubernetesConfig of NodeConfig.
        /// </summary>
        [Input("kubernetesConfig")]
        public Input<Inputs.NodePoolKubernetesConfigGetArgs>? KubernetesConfig { get; set; }

        /// <summary>
        /// The Name of NodePool.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The Config of NodePool.
        /// </summary>
        [Input("nodeConfig")]
        public Input<Inputs.NodePoolNodeConfigGetArgs>? NodeConfig { get; set; }

        [Input("statuses")]
        private InputList<Inputs.NodePoolStatusGetArgs>? _statuses;

        /// <summary>
        /// The Status of NodePool.
        /// </summary>
        public InputList<Inputs.NodePoolStatusGetArgs> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<Inputs.NodePoolStatusGetArgs>());
            set => _statuses = value;
        }

        /// <summary>
        /// The UpdateClientToken of NodePool.
        /// </summary>
        [Input("updateClientToken")]
        public Input<string>? UpdateClientToken { get; set; }

        public NodePoolState()
        {
        }
    }
}
