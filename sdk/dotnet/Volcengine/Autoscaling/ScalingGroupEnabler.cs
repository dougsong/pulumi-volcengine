// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.PulumiPackage.Volcengine.Autoscaling
{
    /// <summary>
    /// Provides a resource to manage scaling group enabler
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Volcengine = Volcengine.PulumiPackage.Volcengine;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         // 创建步骤：terraform init -&gt; terraform plan -&gt; terraform apply
    ///         // 删除步骤: terraform state rm volcengine_scaling_configuration.foo1 -&gt; terraform destroy
    ///         // 创建伸缩组
    ///         var foo = new Volcengine.Autoscaling.ScalingGroup("foo", new Volcengine.Autoscaling.ScalingGroupArgs
    ///         {
    ///             ScalingGroupName = "zzm-tf-test",
    ///             SubnetIds = 
    ///             {
    ///                 "subnet-2fegl9waotzi859gp67relkhv",
    ///             },
    ///             MultiAzPolicy = "BALANCE",
    ///             DesireInstanceNumber = 0,
    ///             MinInstanceNumber = 0,
    ///             MaxInstanceNumber = 1,
    ///             InstanceTerminatePolicy = "OldestInstance",
    ///             DefaultCooldown = 10,
    ///         });
    ///         // 创建伸缩配置
    ///         var foo1 = new Volcengine.Autoscaling.ScalingConfiguration("foo1", new Volcengine.Autoscaling.ScalingConfigurationArgs
    ///         {
    ///             ScalingConfigurationName = "terraform-test",
    ///             ScalingGroupId = foo.ScalingGroupId,
    ///             ImageId = "image-ybx2d38wdfl8j1pupx7b",
    ///             InstanceTypes = 
    ///             {
    ///                 "ecs.g1.2xlarge",
    ///             },
    ///             InstanceName = "tf-test",
    ///             InstanceDescription = "",
    ///             HostName = "",
    ///             Password = "",
    ///             KeyPairName = "zktest",
    ///             SecurityEnhancementStrategy = "InActive",
    ///             Volumes = 
    ///             {
    ///                 new Volcengine.Autoscaling.Inputs.ScalingConfigurationVolumeArgs
    ///                 {
    ///                     VolumeType = "ESSD_PL0",
    ///                     Size = 20,
    ///                     DeleteWithInstance = false,
    ///                 },
    ///                 new Volcengine.Autoscaling.Inputs.ScalingConfigurationVolumeArgs
    ///                 {
    ///                     VolumeType = "ESSD_PL0",
    ///                     Size = 20,
    ///                     DeleteWithInstance = true,
    ///                 },
    ///             },
    ///             SecurityGroupIds = 
    ///             {
    ///                 "sg-12b8llnkn1la817q7y1be4kop",
    ///             },
    ///             EipBandwidth = 0,
    ///             EipIsp = "ChinaMobile",
    ///             EipBillingType = "PostPaidByBandwidth",
    ///         });
    ///         // 绑定伸缩配置
    ///         var foo2 = new Volcengine.Autoscaling.ScalingConfigurationAttachment("foo2", new Volcengine.Autoscaling.ScalingConfigurationAttachmentArgs
    ///         {
    ///             ScalingConfigurationId = foo1.ScalingConfigurationId,
    ///         }, new CustomResourceOptions
    ///         {
    ///             DependsOn = 
    ///             {
    ///                 foo1,
    ///             },
    ///         });
    ///         // 启用伸缩组
    ///         var foo3 = new Volcengine.Autoscaling.ScalingGroupEnabler("foo3", new Volcengine.Autoscaling.ScalingGroupEnablerArgs
    ///         {
    ///             ScalingGroupId = foo.ScalingGroupId,
    ///         }, new CustomResourceOptions
    ///         {
    ///             DependsOn = 
    ///             {
    ///                 foo2,
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Scaling Group enabler can be imported using the scaling_group_id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:autoscaling/scalingGroupEnabler:ScalingGroupEnabler default enable:scg-mizl7m1kqccg5smt1bdpijuj
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:autoscaling/scalingGroupEnabler:ScalingGroupEnabler")]
    public partial class ScalingGroupEnabler : Pulumi.CustomResource
    {
        /// <summary>
        /// The id of the scaling group.
        /// </summary>
        [Output("scalingGroupId")]
        public Output<string> ScalingGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a ScalingGroupEnabler resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScalingGroupEnabler(string name, ScalingGroupEnablerArgs args, CustomResourceOptions? options = null)
            : base("volcengine:autoscaling/scalingGroupEnabler:ScalingGroupEnabler", name, args ?? new ScalingGroupEnablerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScalingGroupEnabler(string name, Input<string> id, ScalingGroupEnablerState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:autoscaling/scalingGroupEnabler:ScalingGroupEnabler", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScalingGroupEnabler resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScalingGroupEnabler Get(string name, Input<string> id, ScalingGroupEnablerState? state = null, CustomResourceOptions? options = null)
        {
            return new ScalingGroupEnabler(name, id, state, options);
        }
    }

    public sealed class ScalingGroupEnablerArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the scaling group.
        /// </summary>
        [Input("scalingGroupId", required: true)]
        public Input<string> ScalingGroupId { get; set; } = null!;

        public ScalingGroupEnablerArgs()
        {
        }
    }

    public sealed class ScalingGroupEnablerState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of the scaling group.
        /// </summary>
        [Input("scalingGroupId")]
        public Input<string>? ScalingGroupId { get; set; }

        public ScalingGroupEnablerState()
        {
        }
    }
}
