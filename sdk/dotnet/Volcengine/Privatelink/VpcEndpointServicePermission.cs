// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Volcengine.PulumiPackage.Volcengine.Privatelink
{
    /// <summary>
    /// Provides a resource to manage privatelink vpc endpoint service permission
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Volcengine = Volcengine.PulumiPackage.Volcengine;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var foo = new Volcengine.Privatelink.VpcEndpointServicePermission("foo", new Volcengine.Privatelink.VpcEndpointServicePermissionArgs
    ///         {
    ///             PermitAccountId = "210000000",
    ///             ServiceId = "epsvc-3rel73uf2ewao5zsk2j2l58ro",
    ///         });
    ///         var foo1 = new Volcengine.Privatelink.VpcEndpointServicePermission("foo1", new Volcengine.Privatelink.VpcEndpointServicePermissionArgs
    ///         {
    ///             PermitAccountId = "210000001",
    ///             ServiceId = "epsvc-3rel73uf2ewao5zsk2j2l58ro",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// VpcEndpointServicePermission can be imported using the serviceId:permitAccountId, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:privatelink/vpcEndpointServicePermission:VpcEndpointServicePermission default epsvc-2fe630gurkl37k5gfuy33****:2100000000
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:privatelink/vpcEndpointServicePermission:VpcEndpointServicePermission")]
    public partial class VpcEndpointServicePermission : Pulumi.CustomResource
    {
        /// <summary>
        /// The id of account.
        /// </summary>
        [Output("permitAccountId")]
        public Output<string> PermitAccountId { get; private set; } = null!;

        /// <summary>
        /// The id of service.
        /// </summary>
        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;


        /// <summary>
        /// Create a VpcEndpointServicePermission resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VpcEndpointServicePermission(string name, VpcEndpointServicePermissionArgs args, CustomResourceOptions? options = null)
            : base("volcengine:privatelink/vpcEndpointServicePermission:VpcEndpointServicePermission", name, args ?? new VpcEndpointServicePermissionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VpcEndpointServicePermission(string name, Input<string> id, VpcEndpointServicePermissionState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:privatelink/vpcEndpointServicePermission:VpcEndpointServicePermission", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/volcengine",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VpcEndpointServicePermission resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VpcEndpointServicePermission Get(string name, Input<string> id, VpcEndpointServicePermissionState? state = null, CustomResourceOptions? options = null)
        {
            return new VpcEndpointServicePermission(name, id, state, options);
        }
    }

    public sealed class VpcEndpointServicePermissionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of account.
        /// </summary>
        [Input("permitAccountId", required: true)]
        public Input<string> PermitAccountId { get; set; } = null!;

        /// <summary>
        /// The id of service.
        /// </summary>
        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public VpcEndpointServicePermissionArgs()
        {
        }
    }

    public sealed class VpcEndpointServicePermissionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The id of account.
        /// </summary>
        [Input("permitAccountId")]
        public Input<string>? PermitAccountId { get; set; }

        /// <summary>
        /// The id of service.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        public VpcEndpointServicePermissionState()
        {
        }
    }
}
