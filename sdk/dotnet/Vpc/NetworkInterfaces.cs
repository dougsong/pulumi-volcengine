// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Vpc
{
    public static class NetworkInterfaces
    {
        /// <summary>
        /// Use this data source to query detailed information of network interfaces
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var @default = Output.Create(Volcengine.Vpc.NetworkInterfaces.InvokeAsync(new Volcengine.Vpc.NetworkInterfacesArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 "eni-2744htx2w0j5s7fap8t3ivwze",
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<NetworkInterfacesResult> InvokeAsync(NetworkInterfacesArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<NetworkInterfacesResult>("volcengine:Vpc/networkInterfaces:NetworkInterfaces", args ?? new NetworkInterfacesArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to query detailed information of network interfaces
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Volcengine = Pulumi.Volcengine;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var @default = Output.Create(Volcengine.Vpc.NetworkInterfaces.InvokeAsync(new Volcengine.Vpc.NetworkInterfacesArgs
        ///         {
        ///             Ids = 
        ///             {
        ///                 "eni-2744htx2w0j5s7fap8t3ivwze",
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<NetworkInterfacesResult> Invoke(NetworkInterfacesInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<NetworkInterfacesResult>("volcengine:Vpc/networkInterfaces:NetworkInterfaces", args ?? new NetworkInterfacesInvokeArgs(), options.WithDefaults());
    }


    public sealed class NetworkInterfacesArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private List<string>? _ids;

        /// <summary>
        /// A list of ENI ids.
        /// </summary>
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        /// <summary>
        /// An id of the instance to which the ENI is bound.
        /// </summary>
        [Input("instanceId")]
        public string? InstanceId { get; set; }

        /// <summary>
        /// A name of ENI.
        /// </summary>
        [Input("networkInterfaceName")]
        public string? NetworkInterfaceName { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public string? OutputFile { get; set; }

        [Input("primaryIpAddresses")]
        private List<string>? _primaryIpAddresses;

        /// <summary>
        /// A list of primary IP address of ENI.
        /// </summary>
        public List<string> PrimaryIpAddresses
        {
            get => _primaryIpAddresses ?? (_primaryIpAddresses = new List<string>());
            set => _primaryIpAddresses = value;
        }

        /// <summary>
        /// An id of the security group to which the secondary ENI belongs.
        /// </summary>
        [Input("securityGroupId")]
        public string? SecurityGroupId { get; set; }

        /// <summary>
        /// A status of ENI.
        /// </summary>
        [Input("status")]
        public string? Status { get; set; }

        /// <summary>
        /// An id of the subnet to which the ENI is connected.
        /// </summary>
        [Input("subnetId")]
        public string? SubnetId { get; set; }

        /// <summary>
        /// A type of ENI.
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        /// <summary>
        /// An id of the virtual private cloud (VPC) to which the ENI belongs.
        /// </summary>
        [Input("vpcId")]
        public string? VpcId { get; set; }

        public NetworkInterfacesArgs()
        {
        }
    }

    public sealed class NetworkInterfacesInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// A list of ENI ids.
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        /// <summary>
        /// An id of the instance to which the ENI is bound.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// A name of ENI.
        /// </summary>
        [Input("networkInterfaceName")]
        public Input<string>? NetworkInterfaceName { get; set; }

        /// <summary>
        /// File name where to save data source results.
        /// </summary>
        [Input("outputFile")]
        public Input<string>? OutputFile { get; set; }

        [Input("primaryIpAddresses")]
        private InputList<string>? _primaryIpAddresses;

        /// <summary>
        /// A list of primary IP address of ENI.
        /// </summary>
        public InputList<string> PrimaryIpAddresses
        {
            get => _primaryIpAddresses ?? (_primaryIpAddresses = new InputList<string>());
            set => _primaryIpAddresses = value;
        }

        /// <summary>
        /// An id of the security group to which the secondary ENI belongs.
        /// </summary>
        [Input("securityGroupId")]
        public Input<string>? SecurityGroupId { get; set; }

        /// <summary>
        /// A status of ENI.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// An id of the subnet to which the ENI is connected.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// A type of ENI.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// An id of the virtual private cloud (VPC) to which the ENI belongs.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public NetworkInterfacesInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class NetworkInterfacesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly string? InstanceId;
        /// <summary>
        /// The name of the ENI.
        /// </summary>
        public readonly string? NetworkInterfaceName;
        /// <summary>
        /// The collection of ENI.
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkInterfacesNetworkInterfaceResult> NetworkInterfaces;
        public readonly string? OutputFile;
        public readonly ImmutableArray<string> PrimaryIpAddresses;
        public readonly string? SecurityGroupId;
        /// <summary>
        /// The status of the ENI.
        /// </summary>
        public readonly string? Status;
        /// <summary>
        /// The id of the subnet to which the ENI is connected.
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// The total count of ENI query.
        /// </summary>
        public readonly int TotalCount;
        /// <summary>
        /// The type of the ENI.
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// The id of the virtual private cloud (VPC) to which the ENI belongs.
        /// </summary>
        public readonly string? VpcId;

        [OutputConstructor]
        private NetworkInterfacesResult(
            string id,

            ImmutableArray<string> ids,

            string? instanceId,

            string? networkInterfaceName,

            ImmutableArray<Outputs.NetworkInterfacesNetworkInterfaceResult> networkInterfaces,

            string? outputFile,

            ImmutableArray<string> primaryIpAddresses,

            string? securityGroupId,

            string? status,

            string? subnetId,

            int totalCount,

            string? type,

            string? vpcId)
        {
            Id = id;
            Ids = ids;
            InstanceId = instanceId;
            NetworkInterfaceName = networkInterfaceName;
            NetworkInterfaces = networkInterfaces;
            OutputFile = outputFile;
            PrimaryIpAddresses = primaryIpAddresses;
            SecurityGroupId = securityGroupId;
            Status = status;
            SubnetId = subnetId;
            TotalCount = totalCount;
            Type = type;
            VpcId = vpcId;
        }
    }
}
