// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Clb.Outputs
{

    [OutputType]
    public sealed class ListenerHealthCheck
    {
        /// <summary>
        /// The domain of health check.
        /// </summary>
        public readonly string? Domain;
        /// <summary>
        /// The enable status of health check function. Optional choice contains `on`, `off`.
        /// </summary>
        public readonly string? Enabled;
        /// <summary>
        /// The healthy threshold of health check.
        /// </summary>
        public readonly int? HealthyThreshold;
        /// <summary>
        /// The normal http status code of health check.
        /// </summary>
        public readonly string? HttpCode;
        /// <summary>
        /// The interval executing health check.
        /// </summary>
        public readonly int? Interval;
        /// <summary>
        /// The method of health check.
        /// </summary>
        public readonly string? Method;
        /// <summary>
        /// The response timeout of health check.
        /// </summary>
        public readonly int? Timeout;
        /// <summary>
        /// The unhealthy threshold of health check.
        /// </summary>
        public readonly int? UnHealthyThreshold;
        /// <summary>
        /// The uri of health check.
        /// </summary>
        public readonly string? Uri;

        [OutputConstructor]
        private ListenerHealthCheck(
            string? domain,

            string? enabled,

            int? healthyThreshold,

            string? httpCode,

            int? interval,

            string? method,

            int? timeout,

            int? unHealthyThreshold,

            string? uri)
        {
            Domain = domain;
            Enabled = enabled;
            HealthyThreshold = healthyThreshold;
            HttpCode = httpCode;
            Interval = interval;
            Method = method;
            Timeout = timeout;
            UnHealthyThreshold = unHealthyThreshold;
            Uri = uri;
        }
    }
}
