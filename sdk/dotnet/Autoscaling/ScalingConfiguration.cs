// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Volcengine.Autoscaling
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Volcengine = Pulumi.Volcengine;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var foo = new Volcengine.Autoscaling.ScalingConfiguration("foo", new Volcengine.Autoscaling.ScalingConfigurationArgs
    ///         {
    ///             EipBandwidth = 0,
    ///             EipBillingType = "PostPaidByBandwidth",
    ///             EipIsp = "ChinaMobile",
    ///             HostName = "",
    ///             ImageId = "image-ybpbrfay1gl8j1srwwyz",
    ///             InstanceDescription = "",
    ///             InstanceName = "tf-test",
    ///             InstanceTypes = 
    ///             {
    ///                 "ecs.g1.4xlarge",
    ///             },
    ///             KeyPairName = "renhuaxi",
    ///             Password = "",
    ///             ScalingConfigurationName = "tf-test",
    ///             ScalingGroupId = "scg-ybru8pazhgl8j1di4tyd",
    ///             SecurityEnhancementStrategy = "InActive",
    ///             SecurityGroupIds = 
    ///             {
    ///                 "sg-2ff4fhdtlo8ao59gp67iiq9o3",
    ///             },
    ///             UserData = "IyEvYmluL2Jhc2gKZWNobyAidGVzdCI=",
    ///             Volumes = 
    ///             {
    ///                 new Volcengine.Autoscaling.Inputs.ScalingConfigurationVolumeArgs
    ///                 {
    ///                     DeleteWithInstance = false,
    ///                     Size = 20,
    ///                     VolumeType = "ESSD_PL0",
    ///                 },
    ///                 new Volcengine.Autoscaling.Inputs.ScalingConfigurationVolumeArgs
    ///                 {
    ///                     DeleteWithInstance = true,
    ///                     Size = 20,
    ///                     VolumeType = "ESSD_PL0",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// ScalingConfiguration can be imported using the id, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import volcengine:autoscaling/scalingConfiguration:ScalingConfiguration default scc-ybkuck3mx8cm9tm5yglz
    /// ```
    /// </summary>
    [VolcengineResourceType("volcengine:autoscaling/scalingConfiguration:ScalingConfiguration")]
    public partial class ScalingConfiguration : Pulumi.CustomResource
    {
        /// <summary>
        /// The create time of the scaling configuration.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The EIP bandwidth which the scaling configuration set.
        /// </summary>
        [Output("eipBandwidth")]
        public Output<int> EipBandwidth { get; private set; } = null!;

        /// <summary>
        /// The EIP billing type which the scaling configuration set. Valid values: PostPaidByBandwidth, PostPaidByTraffic.
        /// </summary>
        [Output("eipBillingType")]
        public Output<string> EipBillingType { get; private set; } = null!;

        /// <summary>
        /// The EIP ISP which the scaling configuration set. Valid values: BGP, ChinaMobile, ChinaUnicom, ChinaTelecom.
        /// </summary>
        [Output("eipIsp")]
        public Output<string> EipIsp { get; private set; } = null!;

        /// <summary>
        /// The ECS hostname which the scaling configuration set.
        /// </summary>
        [Output("hostName")]
        public Output<string?> HostName { get; private set; } = null!;

        /// <summary>
        /// The ECS image id which the scaling configuration set.
        /// </summary>
        [Output("imageId")]
        public Output<string> ImageId { get; private set; } = null!;

        /// <summary>
        /// The ECS instance description which the scaling configuration set.
        /// </summary>
        [Output("instanceDescription")]
        public Output<string?> InstanceDescription { get; private set; } = null!;

        /// <summary>
        /// The ECS instance name which the scaling configuration set.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// The list of the ECS instance type which the scaling configuration set.
        /// </summary>
        [Output("instanceTypes")]
        public Output<ImmutableArray<string>> InstanceTypes { get; private set; } = null!;

        /// <summary>
        /// The ECS key pair name which the scaling configuration set.
        /// </summary>
        [Output("keyPairName")]
        public Output<string?> KeyPairName { get; private set; } = null!;

        /// <summary>
        /// The lifecycle state of the scaling configuration.
        /// </summary>
        [Output("lifecycleState")]
        public Output<string> LifecycleState { get; private set; } = null!;

        /// <summary>
        /// The ECS password which the scaling configuration set.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// The id of the scaling configuration.
        /// </summary>
        [Output("scalingConfigurationId")]
        public Output<string> ScalingConfigurationId { get; private set; } = null!;

        /// <summary>
        /// The name of the scaling configuration.
        /// </summary>
        [Output("scalingConfigurationName")]
        public Output<string> ScalingConfigurationName { get; private set; } = null!;

        /// <summary>
        /// The id of the scaling group to which the scaling configuration belongs.
        /// </summary>
        [Output("scalingGroupId")]
        public Output<string> ScalingGroupId { get; private set; } = null!;

        /// <summary>
        /// The Ecs security enhancement strategy which the scaling configuration set. Valid values: Active, InActive.
        /// </summary>
        [Output("securityEnhancementStrategy")]
        public Output<string?> SecurityEnhancementStrategy { get; private set; } = null!;

        /// <summary>
        /// The list of the security group id of the networkInterface which the scaling configuration set.
        /// </summary>
        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        /// <summary>
        /// The create time of the scaling configuration.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The ECS user data which the scaling configuration set.
        /// </summary>
        [Output("userData")]
        public Output<string?> UserData { get; private set; } = null!;

        /// <summary>
        /// The list of volume of the scaling configuration.
        /// </summary>
        [Output("volumes")]
        public Output<ImmutableArray<Outputs.ScalingConfigurationVolume>> Volumes { get; private set; } = null!;


        /// <summary>
        /// Create a ScalingConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScalingConfiguration(string name, ScalingConfigurationArgs args, CustomResourceOptions? options = null)
            : base("volcengine:autoscaling/scalingConfiguration:ScalingConfiguration", name, args ?? new ScalingConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScalingConfiguration(string name, Input<string> id, ScalingConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("volcengine:autoscaling/scalingConfiguration:ScalingConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScalingConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScalingConfiguration Get(string name, Input<string> id, ScalingConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new ScalingConfiguration(name, id, state, options);
        }
    }

    public sealed class ScalingConfigurationArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The EIP bandwidth which the scaling configuration set.
        /// </summary>
        [Input("eipBandwidth")]
        public Input<int>? EipBandwidth { get; set; }

        /// <summary>
        /// The EIP billing type which the scaling configuration set. Valid values: PostPaidByBandwidth, PostPaidByTraffic.
        /// </summary>
        [Input("eipBillingType")]
        public Input<string>? EipBillingType { get; set; }

        /// <summary>
        /// The EIP ISP which the scaling configuration set. Valid values: BGP, ChinaMobile, ChinaUnicom, ChinaTelecom.
        /// </summary>
        [Input("eipIsp")]
        public Input<string>? EipIsp { get; set; }

        /// <summary>
        /// The ECS hostname which the scaling configuration set.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The ECS image id which the scaling configuration set.
        /// </summary>
        [Input("imageId", required: true)]
        public Input<string> ImageId { get; set; } = null!;

        /// <summary>
        /// The ECS instance description which the scaling configuration set.
        /// </summary>
        [Input("instanceDescription")]
        public Input<string>? InstanceDescription { get; set; }

        /// <summary>
        /// The ECS instance name which the scaling configuration set.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        [Input("instanceTypes", required: true)]
        private InputList<string>? _instanceTypes;

        /// <summary>
        /// The list of the ECS instance type which the scaling configuration set.
        /// </summary>
        public InputList<string> InstanceTypes
        {
            get => _instanceTypes ?? (_instanceTypes = new InputList<string>());
            set => _instanceTypes = value;
        }

        /// <summary>
        /// The ECS key pair name which the scaling configuration set.
        /// </summary>
        [Input("keyPairName")]
        public Input<string>? KeyPairName { get; set; }

        /// <summary>
        /// The ECS password which the scaling configuration set.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The name of the scaling configuration.
        /// </summary>
        [Input("scalingConfigurationName", required: true)]
        public Input<string> ScalingConfigurationName { get; set; } = null!;

        /// <summary>
        /// The id of the scaling group to which the scaling configuration belongs.
        /// </summary>
        [Input("scalingGroupId", required: true)]
        public Input<string> ScalingGroupId { get; set; } = null!;

        /// <summary>
        /// The Ecs security enhancement strategy which the scaling configuration set. Valid values: Active, InActive.
        /// </summary>
        [Input("securityEnhancementStrategy")]
        public Input<string>? SecurityEnhancementStrategy { get; set; }

        [Input("securityGroupIds", required: true)]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// The list of the security group id of the networkInterface which the scaling configuration set.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// The ECS user data which the scaling configuration set.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        [Input("volumes", required: true)]
        private InputList<Inputs.ScalingConfigurationVolumeArgs>? _volumes;

        /// <summary>
        /// The list of volume of the scaling configuration.
        /// </summary>
        public InputList<Inputs.ScalingConfigurationVolumeArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.ScalingConfigurationVolumeArgs>());
            set => _volumes = value;
        }

        public ScalingConfigurationArgs()
        {
        }
    }

    public sealed class ScalingConfigurationState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The create time of the scaling configuration.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The EIP bandwidth which the scaling configuration set.
        /// </summary>
        [Input("eipBandwidth")]
        public Input<int>? EipBandwidth { get; set; }

        /// <summary>
        /// The EIP billing type which the scaling configuration set. Valid values: PostPaidByBandwidth, PostPaidByTraffic.
        /// </summary>
        [Input("eipBillingType")]
        public Input<string>? EipBillingType { get; set; }

        /// <summary>
        /// The EIP ISP which the scaling configuration set. Valid values: BGP, ChinaMobile, ChinaUnicom, ChinaTelecom.
        /// </summary>
        [Input("eipIsp")]
        public Input<string>? EipIsp { get; set; }

        /// <summary>
        /// The ECS hostname which the scaling configuration set.
        /// </summary>
        [Input("hostName")]
        public Input<string>? HostName { get; set; }

        /// <summary>
        /// The ECS image id which the scaling configuration set.
        /// </summary>
        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        /// <summary>
        /// The ECS instance description which the scaling configuration set.
        /// </summary>
        [Input("instanceDescription")]
        public Input<string>? InstanceDescription { get; set; }

        /// <summary>
        /// The ECS instance name which the scaling configuration set.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        [Input("instanceTypes")]
        private InputList<string>? _instanceTypes;

        /// <summary>
        /// The list of the ECS instance type which the scaling configuration set.
        /// </summary>
        public InputList<string> InstanceTypes
        {
            get => _instanceTypes ?? (_instanceTypes = new InputList<string>());
            set => _instanceTypes = value;
        }

        /// <summary>
        /// The ECS key pair name which the scaling configuration set.
        /// </summary>
        [Input("keyPairName")]
        public Input<string>? KeyPairName { get; set; }

        /// <summary>
        /// The lifecycle state of the scaling configuration.
        /// </summary>
        [Input("lifecycleState")]
        public Input<string>? LifecycleState { get; set; }

        /// <summary>
        /// The ECS password which the scaling configuration set.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The id of the scaling configuration.
        /// </summary>
        [Input("scalingConfigurationId")]
        public Input<string>? ScalingConfigurationId { get; set; }

        /// <summary>
        /// The name of the scaling configuration.
        /// </summary>
        [Input("scalingConfigurationName")]
        public Input<string>? ScalingConfigurationName { get; set; }

        /// <summary>
        /// The id of the scaling group to which the scaling configuration belongs.
        /// </summary>
        [Input("scalingGroupId")]
        public Input<string>? ScalingGroupId { get; set; }

        /// <summary>
        /// The Ecs security enhancement strategy which the scaling configuration set. Valid values: Active, InActive.
        /// </summary>
        [Input("securityEnhancementStrategy")]
        public Input<string>? SecurityEnhancementStrategy { get; set; }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// The list of the security group id of the networkInterface which the scaling configuration set.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// The create time of the scaling configuration.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The ECS user data which the scaling configuration set.
        /// </summary>
        [Input("userData")]
        public Input<string>? UserData { get; set; }

        [Input("volumes")]
        private InputList<Inputs.ScalingConfigurationVolumeGetArgs>? _volumes;

        /// <summary>
        /// The list of volume of the scaling configuration.
        /// </summary>
        public InputList<Inputs.ScalingConfigurationVolumeGetArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.ScalingConfigurationVolumeGetArgs>());
            set => _volumes = value;
        }

        public ScalingConfigurationState()
        {
        }
    }
}
