// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./account";
export * from "./accounts";
export * from "./allowList";
export * from "./allowListAssociate";
export * from "./allowLists";
export * from "./backup";
export * from "./backupRestore";
export * from "./backups";
export * from "./continuousBackup";
export * from "./endpoint";
export * from "./instance";
export * from "./instances";
export * from "./regions";
export * from "./state";
export * from "./zones";

// Import resources to register:
import { Account } from "./account";
import { AllowList } from "./allowList";
import { AllowListAssociate } from "./allowListAssociate";
import { Backup } from "./backup";
import { BackupRestore } from "./backupRestore";
import { ContinuousBackup } from "./continuousBackup";
import { Endpoint } from "./endpoint";
import { Instance } from "./instance";
import { State } from "./state";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:redis/account:Account":
                return new Account(name, <any>undefined, { urn })
            case "volcengine:redis/allowList:AllowList":
                return new AllowList(name, <any>undefined, { urn })
            case "volcengine:redis/allowListAssociate:AllowListAssociate":
                return new AllowListAssociate(name, <any>undefined, { urn })
            case "volcengine:redis/backup:Backup":
                return new Backup(name, <any>undefined, { urn })
            case "volcengine:redis/backupRestore:BackupRestore":
                return new BackupRestore(name, <any>undefined, { urn })
            case "volcengine:redis/continuousBackup:ContinuousBackup":
                return new ContinuousBackup(name, <any>undefined, { urn })
            case "volcengine:redis/endpoint:Endpoint":
                return new Endpoint(name, <any>undefined, { urn })
            case "volcengine:redis/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "volcengine:redis/state:State":
                return new State(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "redis/account", _module)
pulumi.runtime.registerResourceModule("volcengine", "redis/allowList", _module)
pulumi.runtime.registerResourceModule("volcengine", "redis/allowListAssociate", _module)
pulumi.runtime.registerResourceModule("volcengine", "redis/backup", _module)
pulumi.runtime.registerResourceModule("volcengine", "redis/backupRestore", _module)
pulumi.runtime.registerResourceModule("volcengine", "redis/continuousBackup", _module)
pulumi.runtime.registerResourceModule("volcengine", "redis/endpoint", _module)
pulumi.runtime.registerResourceModule("volcengine", "redis/instance", _module)
pulumi.runtime.registerResourceModule("volcengine", "redis/state", _module)
