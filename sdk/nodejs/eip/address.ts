// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage eip address
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const foo = new volcengine.Eip.Address("foo", {
 *     bandwidth: 1,
 *     billingType: "PostPaidByBandwidth",
 *     description: "tf-test",
 *     isp: "BGP",
 * });
 * ```
 *
 * ## Import
 *
 * Eip address can be imported using the id, e.g.
 *
 * ```sh
 *  $ pulumi import volcengine:Eip/address:Address default eip-274oj9a8rs9a87fap8sf9515b
 * ```
 */
export class Address extends pulumi.CustomResource {
    /**
     * Get an existing Address resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AddressState, opts?: pulumi.CustomResourceOptions): Address {
        return new Address(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'volcengine:Eip/address:Address';

    /**
     * Returns true if the given object is an instance of Address.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Address {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Address.__pulumiType;
    }

    /**
     * The peek bandwidth of the EIP.
     */
    public readonly bandwidth!: pulumi.Output<number>;
    /**
     * The billing type of the EIP Address. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
     */
    public readonly billingType!: pulumi.Output<string>;
    /**
     * The description of the EIP.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ip address of the EIP.
     */
    public /*out*/ readonly eipAddress!: pulumi.Output<string>;
    /**
     * The ISP of the EIP.
     */
    public readonly isp!: pulumi.Output<string>;
    /**
     * The name of the EIP Address.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The status of the EIP.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Address resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AddressArgs | AddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AddressState | undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["billingType"] = state ? state.billingType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["eipAddress"] = state ? state.eipAddress : undefined;
            resourceInputs["isp"] = state ? state.isp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as AddressArgs | undefined;
            if ((!args || args.billingType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'billingType'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["billingType"] = args ? args.billingType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["isp"] = args ? args.isp : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["eipAddress"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Address.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Address resources.
 */
export interface AddressState {
    /**
     * The peek bandwidth of the EIP.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The billing type of the EIP Address. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
     */
    billingType?: pulumi.Input<string>;
    /**
     * The description of the EIP.
     */
    description?: pulumi.Input<string>;
    /**
     * The ip address of the EIP.
     */
    eipAddress?: pulumi.Input<string>;
    /**
     * The ISP of the EIP.
     */
    isp?: pulumi.Input<string>;
    /**
     * The name of the EIP Address.
     */
    name?: pulumi.Input<string>;
    /**
     * The status of the EIP.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Address resource.
 */
export interface AddressArgs {
    /**
     * The peek bandwidth of the EIP.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * The billing type of the EIP Address. And optional choice contains `PostPaidByBandwidth` or `PostPaidByTraffic`.
     */
    billingType: pulumi.Input<string>;
    /**
     * The description of the EIP.
     */
    description?: pulumi.Input<string>;
    /**
     * The ISP of the EIP.
     */
    isp?: pulumi.Input<string>;
    /**
     * The name of the EIP Address.
     */
    name?: pulumi.Input<string>;
}
