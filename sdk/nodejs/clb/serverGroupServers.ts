// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of server group servers
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const defaultServerGroupServers = pulumi.output(volcengine.Clb.ServerGroupServers({
 *     ids: ["rs-273z9pv8mtfcw7fap8sp6ie8k"],
 *     serverGroupId: "rsp-273z9pt9lpdds7fap8sqdvfrf",
 * }));
 * ```
 */
export function serverGroupServers(args: ServerGroupServersArgs, opts?: pulumi.InvokeOptions): Promise<ServerGroupServersResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("volcengine:Clb/serverGroupServers:ServerGroupServers", {
        "ids": args.ids,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "serverGroupId": args.serverGroupId,
    }, opts);
}

/**
 * A collection of arguments for invoking ServerGroupServers.
 */
export interface ServerGroupServersArgs {
    /**
     * The list of ServerGroupServer IDs.
     */
    ids?: string[];
    /**
     * A Name Regex of ServerGroupServer.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The ID of the ServerGroup.
     */
    serverGroupId: string;
}

/**
 * A collection of values returned by ServerGroupServers.
 */
export interface ServerGroupServersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly nameRegex?: string;
    readonly outputFile?: string;
    readonly serverGroupId: string;
    /**
     * The server list of ServerGroup.
     */
    readonly servers: outputs.Clb.ServerGroupServersServer[];
    /**
     * The total count of ServerGroupServer query.
     */
    readonly totalCount: number;
}

export function serverGroupServersOutput(args: ServerGroupServersOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ServerGroupServersResult> {
    return pulumi.output(args).apply(a => serverGroupServers(a, opts))
}

/**
 * A collection of arguments for invoking ServerGroupServers.
 */
export interface ServerGroupServersOutputArgs {
    /**
     * The list of ServerGroupServer IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A Name Regex of ServerGroupServer.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The ID of the ServerGroup.
     */
    serverGroupId: pulumi.Input<string>;
}
