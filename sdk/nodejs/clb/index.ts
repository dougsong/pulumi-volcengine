// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./acl";
export * from "./aclEntry";
export * from "./acls";
export * from "./certificate";
export * from "./certificates";
export * from "./clb";
export * from "./clbs";
export * from "./listener";
export * from "./listeners";
export * from "./rule";
export * from "./rules";
export * from "./serverGroup";
export * from "./serverGroupServer";
export * from "./serverGroupServers";
export * from "./serverGroups";
export * from "./zones";

// Import resources to register:
import { Acl } from "./acl";
import { AclEntry } from "./aclEntry";
import { Certificate } from "./certificate";
import { Clb } from "./clb";
import { Listener } from "./listener";
import { Rule } from "./rule";
import { ServerGroup } from "./serverGroup";
import { ServerGroupServer } from "./serverGroupServer";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "volcengine:clb/acl:Acl":
                return new Acl(name, <any>undefined, { urn })
            case "volcengine:clb/aclEntry:AclEntry":
                return new AclEntry(name, <any>undefined, { urn })
            case "volcengine:clb/certificate:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            case "volcengine:clb/clb:Clb":
                return new Clb(name, <any>undefined, { urn })
            case "volcengine:clb/listener:Listener":
                return new Listener(name, <any>undefined, { urn })
            case "volcengine:clb/rule:Rule":
                return new Rule(name, <any>undefined, { urn })
            case "volcengine:clb/serverGroup:ServerGroup":
                return new ServerGroup(name, <any>undefined, { urn })
            case "volcengine:clb/serverGroupServer:ServerGroupServer":
                return new ServerGroupServer(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("volcengine", "clb/acl", _module)
pulumi.runtime.registerResourceModule("volcengine", "clb/aclEntry", _module)
pulumi.runtime.registerResourceModule("volcengine", "clb/certificate", _module)
pulumi.runtime.registerResourceModule("volcengine", "clb/clb", _module)
pulumi.runtime.registerResourceModule("volcengine", "clb/listener", _module)
pulumi.runtime.registerResourceModule("volcengine", "clb/rule", _module)
pulumi.runtime.registerResourceModule("volcengine", "clb/serverGroup", _module)
pulumi.runtime.registerResourceModule("volcengine", "clb/serverGroupServer", _module)
