// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to query detailed information of server groups
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as volcengine from "@pulumi/volcengine";
 *
 * const defaultServerGroups = pulumi.output(volcengine.Clb.ServerGroups({
 *     ids: [
 *         "rsp-273yv0kir1vk07fap8tt9jtwg",
 *         "rsp-273yxuqfova4g7fap8tyemn6t",
 *         "rsp-273z9pt9lpdds7fap8sqdvfrf",
 *     ],
 * }));
 * ```
 */
export function serverGroups(args?: ServerGroupsArgs, opts?: pulumi.InvokeOptions): Promise<ServerGroupsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("volcengine:Clb/serverGroups:ServerGroups", {
        "ids": args.ids,
        "loadBalancerId": args.loadBalancerId,
        "nameRegex": args.nameRegex,
        "outputFile": args.outputFile,
        "serverGroupName": args.serverGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking ServerGroups.
 */
export interface ServerGroupsArgs {
    /**
     * A list of ServerGroup IDs.
     */
    ids?: string[];
    /**
     * The id of the Clb.
     */
    loadBalancerId?: string;
    /**
     * A Name Regex of ServerGroup.
     */
    nameRegex?: string;
    /**
     * File name where to save data source results.
     */
    outputFile?: string;
    /**
     * The name of the ServerGroup.
     */
    serverGroupName?: string;
}

/**
 * A collection of values returned by ServerGroups.
 */
export interface ServerGroupsResult {
    /**
     * The collection of ServerGroup query.
     */
    readonly groups: outputs.Clb.ServerGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ids?: string[];
    readonly loadBalancerId?: string;
    readonly nameRegex?: string;
    readonly outputFile?: string;
    /**
     * The name of the ServerGroup.
     */
    readonly serverGroupName?: string;
    /**
     * The total count of ServerGroup query.
     */
    readonly totalCount: number;
}

export function serverGroupsOutput(args?: ServerGroupsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<ServerGroupsResult> {
    return pulumi.output(args).apply(a => serverGroups(a, opts))
}

/**
 * A collection of arguments for invoking ServerGroups.
 */
export interface ServerGroupsOutputArgs {
    /**
     * A list of ServerGroup IDs.
     */
    ids?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The id of the Clb.
     */
    loadBalancerId?: pulumi.Input<string>;
    /**
     * A Name Regex of ServerGroup.
     */
    nameRegex?: pulumi.Input<string>;
    /**
     * File name where to save data source results.
     */
    outputFile?: pulumi.Input<string>;
    /**
     * The name of the ServerGroup.
     */
    serverGroupName?: pulumi.Input<string>;
}
